apply plugin: 'com.android.application'
apply plugin: 'jacoco'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-allopen'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android-extensions'


def versionTemplate = "1.0.{label}"
def serverBuild = System.getenv('NEQABTY_BUILDNUMBER')
def secret = System.getenv('NEQABTY_SECRET')


def getLocalSigningConfig(String secret) {
    if (secret != null) {
        return android.signingConfigs.config
    } else {
        return null
    }
}

String getVersionName(String versionTemplate, int serverBuild) {
    return (versionTemplate).replace("{label}", Integer.toString(serverBuild))
}

int getVersionCode(String serverBuild) {
    if (serverBuild != null && !serverBuild.isEmpty()) {
        return (Integer.parseInt(serverBuild))
    }
    return 0
}

//allOpen {
//    // allows mocking for classes w/o directly opening them for release builds
//    annotation 'com.neqabty.testing.OpenClass'
//}
android {
    compileSdkVersion build_versions.target_sdk
    signingConfigs {
        config {
            keyAlias 'neqabty'
            keyPassword secret
            storeFile file('E:/Work/Android/Kotlin/NeQabty/keyStore.jks')
            storePassword secret
        }
    }
    defaultConfig {
        applicationId "com.neqabty"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode getVersionCode(serverBuild)
        versionName getVersionName(versionTemplate, getVersionCode(serverBuild))
        testInstrumentationRunner "com.neqabty.presentation.util.GithubTestRunner"
        multiDexEnabled true
        signingConfig signingConfigs.config

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true"]
            }
        }

    }
    buildTypes {
        debug {
            testCoverageEnabled !project.hasProperty('android.injected.invoked.from.ide')
            debuggable = true
        }
        release {
            minifyEnabled false
            testCoverageEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig getLocalSigningConfig(secret)
            debuggable = false

            shrinkResources false
            jniDebuggable false
            renderscriptDebuggable false
            pseudoLocalesEnabled false
            zipAlignEnabled false
        }
    }
    flavorDimensions "mode"

    productFlavors {
        dev {
            dimension "mode"
            minSdkVersion 24
            resConfigs "en", "xhdpi"
        }

        prod {
            dimension "mode"
        }
    }

    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        androidTest.java.srcDirs += "src/test-common/java"
        test.java.srcDirs += "src/test-common/java"
    }
    lintOptions {
        lintConfig rootProject.file('lint.xml')
//        abortOnError false
    }
//    kapt { generateStubs = true }
    kapt {
        generateStubs = true
//        correctErrorTypes = true
        javacOptions {
            // Increase the max count of errors from annotation processors.
            // Default is 100.
            option("-Xmaxerrs", 500)
        }
    }
}

jacoco {
    toolVersion = "0.7.4+"
}

dependencies {
    implementation deps.support.app_compat
    implementation deps.support.recyclerview
    implementation deps.support.cardview
    implementation deps.support.design
    implementation deps.navigation.fragment_ktx
    implementation deps.navigation.ui_ktx
    implementation deps.room.common
    implementation deps.room.runtime
    implementation deps.rxjava2
    implementation deps.rx_android
    implementation deps.lifecycle.runtime
    implementation deps.lifecycle.extensions
    implementation deps.lifecycle.java8
    implementation deps.retrofit.runtime
    implementation deps.retrofit.adapter
    implementation deps.retrofit.jadapter
    implementation deps.retrofit.gson
    implementation deps.retrofit.scalars
    implementation deps.okhttp_logging_interceptor
    implementation deps.glide.runtime

    implementation deps.dagger.runtime
    implementation deps.dagger.android
    implementation deps.dagger.android_support
    implementation deps.constraint_layout
    implementation deps.kotlin.stdlib

    implementation deps.timber

    implementation deps.firebase.core
    implementation deps.firebase.messaging
    implementation deps.firebase.jobdispatcher

    implementation deps.viewpager.pager
    implementation deps.viewpager.indicator

    kapt deps.dagger.android_support_compiler
    kapt deps.dagger.compiler
    kapt deps.room.compiler
    kapt deps.lifecycle.compiler
    kapt deps.binding.compiler

    implementation deps.mastercard
    implementation files('libs/cowpaysdk.aar')
    implementation project(':wheel')
    implementation project(':mobilepaymentsdktest')

    testImplementation deps.junit
    testImplementation deps.mock_web_server
    testImplementation(deps.arch_core.testing, {
        exclude group: 'com.android.support', module: 'support-compat'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-core-utils'
    })
    testImplementation deps.mockito.core

    androidTestImplementation deps.navigation.testing_ktx
    androidTestImplementation deps.support.app_compat
    androidTestImplementation deps.support.recyclerview
    androidTestImplementation deps.support.cardview
    androidTestImplementation deps.support.design

    androidTestImplementation(deps.espresso.core, {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    })
    androidTestImplementation(deps.espresso.contrib, {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    })

    androidTestImplementation(deps.arch_core.testing, {
    })
    androidTestImplementation deps.dexmaker
    androidTestImplementation deps.mockito.core, { exclude group: 'net.bytebuddy' }
}

task fullCoverageReport(type: JacocoReport) {
    dependsOn 'createDebugCoverageReport'
    dependsOn 'testDebugUnitTest'
    reports {
        xml.enabled = true
        html.enabled = true
    }


}

task printBuildNumber {
    println System.getenv("NEQABTY_BUILDNUMBER")
}